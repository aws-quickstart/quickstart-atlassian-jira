{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "QS(NOTASSIGNED) Atlassian JIRA template master License: Apache 2.0 (Please do not remove)",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [{
        "Label": {
          "default": " VPC Network Configuration"
        },
        "Parameters": [
          "AvailabilityZones",
          "VPCCIDR",
          "PrivateSubnet1CIDR",
          "PrivateSubnet2CIDR",
          "PublicSubnet1CIDR",
          "PublicSubnet2CIDR",
          "SSLCertificateName",
          "AssociatePublicIpAddress"
        ]
      }, {
        "Label": {
          "default": "JIRA Setup"
        },
        "Parameters": [
          "JiraVersion",
          "ClusterNodeMax",
          "ClusterNodeMin",
          "ClusterNodeInstanceType",
          "DBInstanceClass",
          "DBMasterUserPassword",
          "DBName",
          "DBPassword",
          "DBStorage",
          "DBStorageType",
          "DBIops",
          "DBMultiAZ"
        ]
      }, {
        "Label": {
          "default": "JIRA Advanced Configuration (Optional)"
        },
        "Parameters": [
          "CatalinaOpts",
          "StartCollectd"
        ]
      }, {
        "Label": {
          "default": "Amazon EC2 Configuration"
        },
        "Parameters": [
          "KeyPairName",
          "NATInstanceType"
        ]
      }, {
        "Label": {
          "default": "AWS Quick Start Configuration"
        },
        "Parameters": [
          "QSS3BucketName",
          "QSS3KeyPrefix"
        ]
      }],
      "ParameterLabels": {
        "AvailabilityZones": {
          "default": "Availability Zones"
        },
        "KeyPairName": {
          "default": "Key Name"
        },
        "NATInstanceType": {
          "default": "NAT Instance Type"
        },
        "PrivateSubnet1CIDR": {
          "default": "Private Subnet 1 CIDR"
        },
        "PrivateSubnet2CIDR": {
          "default": "Private Subnet 2 CIDR"
        },
        "PublicSubnet1CIDR": {
          "default": "Public Subnet 1 CIDR"
        },
        "PublicSubnet2CIDR": {
          "default": "Public Subnet 2 CIDR"
        },
        "QSS3BucketName": {
          "default": "Quick Start S3 Bucket Name"
        },
        "QSS3KeyPrefix": {
          "default": "Quick Start S3 Key Prefix"
        },
        "VPCCIDR": {
          "default": "VPC CIDR"
        },
        "AssociatePublicIpAddress": {
          "default": "Assign public IP"
        },
        "JiraVersion": {
          "default": "Version"
        },
        "CatalinaOpts": {
          "default": "Catalina Options"
        },
        "StartCollectd": {
          "default": "Start the collectd service"
        },
        "ClusterNodeMax": {
          "default": "Maximum number of cluster nodes"
        },
        "ClusterNodeMin": {
          "default": "Minimum number of cluster nodes"
        },
        "ClusterNodeInstanceType": {
          "default": "JIRA cluster node instance type"
        },
        "DBInstanceClass": {
          "default": "Database instance class"
        },
        "DBMasterUserPassword": {
          "default": "Master password"
        },
        "DBName": {
          "default": "JIRA database name"
        },
        "DBPassword": {
          "default": "JIRA database password"
        },
        "DBStorage": {
          "default": "Database storage"
        },
        "DBStorageType": {
          "default": "Database storage type"
        },
        "DBMultiAZ": {
          "default": "HA Database across Availability Zones"
        },
        "DBIops": {
          "default": "RDS Provisioned IOPS"
        },
        "SSLCertificateName": {
          "default": "SSL Certificate Name"
        }
      }
    }
  },
  "Parameters": {
    "AvailabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "NATInstanceType": {
      "AllowedValues": [
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m4.large"
      ],
      "Default": "t2.small",
      "Description": "Amazon EC2 instance type for the NAT Instances. This is only used if the region does not support NAT gateways.",
      "Type": "String"
    },
    "PrivateSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.0.0/19",
      "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
      "Type": "String"
    },
    "PrivateSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.32.0/19",
      "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
      "Type": "String"
    },
    "PublicSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.128.0/20",
      "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
      "Type": "String"
    },
    "PublicSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.144.0/20",
      "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
      "Type": "String"
    },
    "QSS3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Default": "quickstart-reference",
      "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Type": "String"
    },
    "QSS3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
      "Default": "atlassian/jira/latest",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
      "Type": "String"
    },
    "VPCCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.0.0/16",
      "Description": "CIDR Block for the VPC",
      "Type": "String"
    },
    "AssociatePublicIpAddress": {
      "Description": "Controls if the EC2 instances are assigned a public IP address",
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "Must be 'true' or 'false'."
    },
    "JiraVersion": {
      "Description": "Version of JIRA to install. Find valid versions at https://www.atlassian.com/software/jira/download-archives.html",
      "Type": "String",
      "Default": "7.3.0-SNAPSHOT",
      "MinLength": "5",
      "MaxLength": "27",
      "ConstraintDescription": "Must be a valid JIRA version number."
    },
    "ClusterNodeMax": {
      "Type": "Number",
      "Default": "1"
    },
    "ClusterNodeMin": {
      "Type": "Number",
      "Default": "1"
    },
    "ClusterNodeInstanceType": {
      "Type": "String",
      "Default": "c3.xlarge",
      "AllowedValues": [
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "hs1.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 HVM instance type. 'xlarge' or larger. 'm'-type instances may be of type 'large'"
    },
    "CatalinaOpts": {
      "Type": "String",
      "Default": ""
    },
    "DBInstanceClass": {
      "Description": "RDS instance type",
      "Type": "String",
      "Default": "db.m4.large",
      "AllowedValues": [
        "db.m4.large",
        "db.m4.xlarge",
        "db.m4.2xlarge",
        "db.m4.4xlarge",
        "db.m4.10xlarge",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge",
        "db.t2.medium",
        "db.t2.large"
      ],
      "ConstraintDescription": "Must be a valid RDS instance class, 'db.t2.medium' or larger."
    },

    "DBMasterUserPassword": {
      "NoEcho": "true",
      "Description": "Database admin account password. Must be minimum 8 characters.",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "Must be at least 8 alphanumeric characters."
    },
    "DBName": {
      "Description": "Database name",
      "Type": "String",
      "Default": "jira",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9_-]*",
      "ConstraintDescription": "Must not be blank, and may contain only alphanumeric characters, underscore ('_'), and hyphen ('-')."
    },
    "DBPassword": {
      "Description": "Database user account password. Must be minimum 8 characters.",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "Must contain only alphanumeric characters.",
      "NoEcho": "true"
    },  
    "DBStorage": {
      "Description": "Database allocated storage size, in gigabytes (GB). Should be between 100 and 6144, if you are choosing Provisioned IOPS",
      "Type": "Number",
      "Default": "10"
    },
    "DBStorageType": {
      "Description": "Database storage type",
      "Type": "String",
      "Default": "General Purpose (SSD)",
      "AllowedValues": [
        "General Purpose (SSD)",
        "Provisioned IOPS"
      ],
      "ConstraintDescription": "Must be 'General Purpose (SSD)' or 'Provisioned IOPS'."
    },
    "DBMultiAZ": {
      "Description": "Database High availability across Availability Zones",
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "Must be 'true' or 'false'."
    },    
    "DBIops": {
      "Description": "Should be in the range of 1000 - 20000, and only used with Provisioned IOPS.  Note: The ratio of iops per allocated-storage must be between 3.00 and 10.00.",
      "Type": "Number",
      "Default": "1000",
      "MinValue": "1000",
      "MaxValue": "20000",
      "ConstraintDescription": "Must be in the range 1000 - 20000."
    },
    "StartCollectd": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "Must be 'true' or 'false'"
    },
    "SSLCertificateName": {
      "Description": "The name of your Server Certificate to use for HTTPS.  Leave blank if you don't want to set up HTTPS at this time",
      "Type": "String",
      "MinLength": "0",
      "MaxLength": "32",
      "Default": ""
    }
  },
  "Conditions": {
    "DBProvisionedIops": {
      "Fn::Equals": [{
          "Ref": "DBStorageType"
        },
        "Provisioned IOPS"
      ]
    },
    "DoCollectd": {
      "Fn::Not": [{
        "Fn::Equals": [{
            "Ref": "StartCollectd"
          },
          ""
        ]
      }]
    },
    "DoSetDBMasterUserPassword": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "DBMasterUserPassword"
            },
            ""
          ]
        }
      ]
    },    
    "DoSSL": {
      "Fn::Not": [{
        "Fn::Equals": [{
            "Ref": "SSLCertificateName"
          },
          ""
        ]
      }]
    }  
  },
  "Mappings": {
    "AWSInfoRegionMap": {
      "ap-northeast-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-northeast-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-south-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-southeast-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "ap-southeast-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "eu-central-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "eu-west-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "sa-east-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-east-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-gov-west-1": {
        "Partition": "aws-us-gov",
        "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
      },
      "us-west-1": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      },
      "us-west-2": {
        "Partition": "aws",
        "QuickStartS3URL": "https://s3.amazonaws.com"
      }
    }
  },
  "Resources": {
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/", [{
                "Fn::FindInMap": [
                  "AWSInfoRegionMap", {
                    "Ref": "AWS::Region"
                  },
                  "QuickStartS3URL"
                ]
              }, {
                "Ref": "QSS3BucketName"
              },
              "aws/vpc/latest/templates/aws-vpc.template"
            ]
          ]
        },
        "Parameters": {
          "AvailabilityZones": {
            "Fn::Join": [
              ",", {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "NATInstanceType": {
            "Ref": "NATInstanceType"
          },
          "NumberOfAZs": "2",
          "PrivateSubnet1ACIDR": {
            "Ref": "PrivateSubnet1CIDR"
          },
          "PrivateSubnet2ACIDR": {
            "Ref": "PrivateSubnet2CIDR"
          },
          "PublicSubnet1CIDR": {
            "Ref": "PublicSubnet1CIDR"
          },
          "PublicSubnet2CIDR": {
            "Ref": "PublicSubnet2CIDR"
          },
          "VPCCIDR": {
            "Ref": "VPCCIDR"
          }
        }
      }
    },
    "JiraDCStack": {
      "DependsOn": "VPCStack",
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/", [{
                "Fn::FindInMap": [
                  "AWSInfoRegionMap", {
                    "Ref": "AWS::Region"
                  },
                  "QuickStartS3URL"
                ]
              }, {
                "Ref": "QSS3BucketName"
              }, {
                "Ref": "QSS3KeyPrefix"
              },
              "templates/JiraDataCenter.template"
            ]
          ]
        },
        "Parameters": {           
          "AvailabilityZones": {
            "Fn::Join": [
              ",", {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "Subnets": {
                    "Fn::Join": [
                        ",",
                        [   
                            {   
                               "Fn::GetAtt": [ "VPCStack", "Outputs.PublicSubnet1ID"]
                            },  
                            {   
                               "Fn::GetAtt": [ "VPCStack", "Outputs.PublicSubnet2ID"]
                            }   
                        ]   
                    ]   
                },  
          "VPC": {
                  "Fn::GetAtt": [
                  "VPCStack",
                  "Outputs.VPCID"
                  ]   
          }, 
          "AssociatePublicIpAddress": {
            "Ref": "AssociatePublicIpAddress"
          },
          "JiraVersion": {
            "Ref": "JiraVersion"
          },
          "ClusterNodeMax": {
            "Ref": "ClusterNodeMax"
          },
          "ClusterNodeMin": {
            "Ref": "ClusterNodeMin"
          },
          "ClusterNodeInstanceType": {
            "Ref": "ClusterNodeInstanceType"
          },
          "CatalinaOpts": {
            "Ref": "CatalinaOpts"
          },
          "StartCollectd": {
            "Ref": "StartCollectd"
          },
          "DBInstanceClass": {
            "Ref": "DBInstanceClass"
          },
          "DBIops": {
            "Ref": "DBIops"
          },
          "DBMultiAZ": {
            "Ref": "DBMultiAZ"
          },          
          "DBMasterUserPassword": {
            "Ref": "DBMasterUserPassword"
          },
          "DBName": {
            "Ref": "DBName"
          },
          "DBPassword": {
            "Ref": "DBPassword"
          },
          "DBStorage": {
            "Ref": "DBStorage"
          },
          "DBStorageType": {
            "Ref": "DBStorageType"
          },
          "SSLCertificateName": {
            "Ref": "SSLCertificateName"
          },
          "KeyName": {
            "Ref": "KeyPairName"
          }
        }
      }
    }
  },
  "Outputs": {
    "JiraURL": {
      "Description": "The URL of the JIRA deployment",
      "Value": {
                  "Fn::GetAtt": [
                  "JiraDCStack",
                  "Outputs.URL"
                  ]   
                }
    }    
  }

}
